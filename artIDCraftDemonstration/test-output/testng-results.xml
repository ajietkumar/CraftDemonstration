<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="4652" started-at="2018-09-21T06:42:07Z" finished-at="2018-09-21T06:42:12Z">
    <groups>
    </groups>
    <test name="CraftDemonstration" duration-ms="4652" started-at="2018-09-21T06:42:07Z" finished-at="2018-09-21T06:42:12Z">
      <class name="artIDCraftDemonstration.ValidateResponseStatusCode">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[ValidateResponseStatusCode passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2018-09-20T23:42:11Z" finished-at="2018-09-20T23:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void artIDCraftDemonstration.ValidateResponseStatusCode.PositiveResponseStatusCode(java.lang.String) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="PositiveResponseStatusCode(java.lang.String)[pri:0, instance:[ValidateResponseStatusCode passed=0 failed=0 skipped=0]]" name="PositiveResponseStatusCode" duration-ms="558" started-at="2018-09-20T23:42:11Z" finished-at="2018-09-20T23:42:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://api.nasa.gov]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PositiveResponseStatusCode -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[ValidateResponseStatusCode passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="60" started-at="2018-09-20T23:42:12Z" finished-at="2018-09-20T23:42:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PositiveResponseStatusCode on [ValidateResponseStatusCode passed=0 failed=0 skipped=0] status=SUCCESS method=ValidateResponseStatusCode.PositiveResponseStatusCode(java.lang.String)[pri:0, instance:[ValidateResponseStatusCode passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- artIDCraftDemonstration.ValidateResponseStatusCode -->
      <class name="artIDCraftDemonstration.RetrieveDataBasedOnFilter">
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:[RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0]]" name="setup" is-config="true" duration-ms="12" started-at="2018-09-20T23:42:07Z" finished-at="2018-09-20T23:42:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@203dd56b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:[RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0]]" name="beforeMethod" is-config="true" duration-ms="234" started-at="2018-09-20T23:42:07Z" finished-at="2018-09-20T23:42:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void artIDCraftDemonstration.RetrieveDataBasedOnFilter.ValidateDataDetails(java.lang.String,int) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidateDataDetails(java.lang.String, int)[pri:0, instance:[RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0]]" name="ValidateDataDetails" duration-ms="3433" started-at="2018-09-20T23:42:07Z" finished-at="2018-09-20T23:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://api.nasa.gov]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateDataDetails -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:[RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0]]" name="afterMethod" is-config="true" duration-ms="347" started-at="2018-09-20T23:42:11Z" finished-at="2018-09-20T23:42:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateDataDetails on [RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0] status=SUCCESS method=RetrieveDataBasedOnFilter.ValidateDataDetails(java.lang.String, int)[pri:0, instance:[RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0]] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="afterSuite()[pri:0, instance:[RetrieveDataBasedOnFilter passed=0 failed=0 skipped=0]]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-09-20T23:42:12Z" finished-at="2018-09-20T23:42:12Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at GenericLib.Extent_Reports.afterSuite(Extent_Reports.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:336)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- artIDCraftDemonstration.RetrieveDataBasedOnFilter -->
    </test> <!-- CraftDemonstration -->
  </suite> <!-- Suite -->
</testng-results>
